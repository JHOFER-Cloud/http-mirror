name: Release

on:
  push:
    tags:
      - 'v*'

env:
  REGISTRY: ghcr.io
  SERVER_IMAGE_NAME: ghcr.io/${{ github.repository }}-server
  UPDATER_IMAGE_NAME: ghcr.io/${{ github.repository }}-updater

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.25'
          cache: true

      - name: Run tests
        run: |
          go mod download
          go test -v ./...
          go vet ./...

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract version
        id: version
        run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Build and push server image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.server
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ env.SERVER_IMAGE_NAME }}:${{ steps.version.outputs.version }}
            ${{ env.SERVER_IMAGE_NAME }}:latest
          labels: |
            org.opencontainers.image.title=HTTP Mirror Server
            org.opencontainers.image.description=Web server component for HTTP Mirror
            org.opencontainers.image.version=${{ steps.version.outputs.version }}
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push updater image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.updater
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ env.UPDATER_IMAGE_NAME }}:${{ steps.version.outputs.version }}
            ${{ env.UPDATER_IMAGE_NAME }}:latest
          labels: |
            org.opencontainers.image.title=HTTP Mirror Updater
            org.opencontainers.image.description=Updater component for HTTP Mirror
            org.opencontainers.image.version=${{ steps.version.outputs.version }}
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Generate changelog
        id: changelog
        run: |
          echo "## What's Changed" > CHANGELOG.md
          git log --oneline --no-decorate $(git describe --tags --abbrev=0 HEAD~1)..HEAD >> CHANGELOG.md
          echo "" >> CHANGELOG.md
          echo "## Docker Images" >> CHANGELOG.md
          echo "- Server: \`${{ env.SERVER_IMAGE_NAME }}:${{ steps.version.outputs.version }}\`" >> CHANGELOG.md
          echo "- Updater: \`${{ env.UPDATER_IMAGE_NAME }}:${{ steps.version.outputs.version }}\`" >> CHANGELOG.md

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ steps.version.outputs.version }}
          body_path: CHANGELOG.md
          draft: false
          prerelease: false